//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManager.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDatabaseManagerService")]
    public interface IDatabaseManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/ChangeOutputValueResponse")]
        bool ChangeOutputValue(string name, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/ChangeOutputValueResponse")]
        System.Threading.Tasks.Task<bool> ChangeOutputValueAsync(string name, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetOutputValueResponse")]
        double GetOutputValue(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetOutputValueResponse")]
        System.Threading.Tasks.Task<double> GetOutputValueAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOn", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOnResponse")]
        bool TurnScanOn(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOn", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOnResponse")]
        System.Threading.Tasks.Task<bool> TurnScanOnAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOff", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOffResponse")]
        bool TurnScanOff(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOff", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOffResponse")]
        System.Threading.Tasks.Task<bool> TurnScanOffAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddTagResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.InTag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.AI))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.DI))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.OutTag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.AO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.DO))]
        bool AddTag(ScadaModels.Tag newTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddTagResponse")]
        System.Threading.Tasks.Task<bool> AddTagAsync(ScadaModels.Tag newTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveTagResponse")]
        bool RemoveTag(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveTagResponse")]
        System.Threading.Tasks.Task<bool> RemoveTagAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddAlarm", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddAlarmResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ScadaModels.AlarmValue))]
        bool AddAlarm(string name, ScadaModels.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddAlarm", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddAlarmResponse")]
        System.Threading.Tasks.Task<bool> AddAlarmAsync(string name, ScadaModels.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveAlarm", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveAlarmResponse")]
        bool RemoveAlarm(string name, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveAlarm", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveAlarmResponse")]
        System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string name, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetTagAlarms", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetTagAlarmsResponse")]
        ScadaModels.Alarm[] GetTagAlarms(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetTagAlarms", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetTagAlarmsResponse")]
        System.Threading.Tasks.Task<ScadaModels.Alarm[]> GetTagAlarmsAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Registration", ReplyAction="http://tempuri.org/IDatabaseManagerService/RegistrationResponse")]
        bool Registration(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Registration", ReplyAction="http://tempuri.org/IDatabaseManagerService/RegistrationResponse")]
        System.Threading.Tasks.Task<bool> RegistrationAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Login", ReplyAction="http://tempuri.org/IDatabaseManagerService/LoginResponse")]
        System.Tuple<bool, string> Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Login", ReplyAction="http://tempuri.org/IDatabaseManagerService/LoginResponse")]
        System.Threading.Tasks.Task<System.Tuple<bool, string>> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Logout", ReplyAction="http://tempuri.org/IDatabaseManagerService/LogoutResponse")]
        bool Logout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Logout", ReplyAction="http://tempuri.org/IDatabaseManagerService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseManagerServiceChannel : DatabaseManager.ServiceReference.IDatabaseManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseManagerServiceClient : System.ServiceModel.ClientBase<DatabaseManager.ServiceReference.IDatabaseManagerService>, DatabaseManager.ServiceReference.IDatabaseManagerService {
        
        public DatabaseManagerServiceClient() {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ChangeOutputValue(string name, double value) {
            return base.Channel.ChangeOutputValue(name, value);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeOutputValueAsync(string name, double value) {
            return base.Channel.ChangeOutputValueAsync(name, value);
        }
        
        public double GetOutputValue(string name) {
            return base.Channel.GetOutputValue(name);
        }
        
        public System.Threading.Tasks.Task<double> GetOutputValueAsync(string name) {
            return base.Channel.GetOutputValueAsync(name);
        }
        
        public bool TurnScanOn(string name) {
            return base.Channel.TurnScanOn(name);
        }
        
        public System.Threading.Tasks.Task<bool> TurnScanOnAsync(string name) {
            return base.Channel.TurnScanOnAsync(name);
        }
        
        public bool TurnScanOff(string name) {
            return base.Channel.TurnScanOff(name);
        }
        
        public System.Threading.Tasks.Task<bool> TurnScanOffAsync(string name) {
            return base.Channel.TurnScanOffAsync(name);
        }
        
        public bool AddTag(ScadaModels.Tag newTag) {
            return base.Channel.AddTag(newTag);
        }
        
        public System.Threading.Tasks.Task<bool> AddTagAsync(ScadaModels.Tag newTag) {
            return base.Channel.AddTagAsync(newTag);
        }
        
        public bool RemoveTag(string name) {
            return base.Channel.RemoveTag(name);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTagAsync(string name) {
            return base.Channel.RemoveTagAsync(name);
        }
        
        public bool AddAlarm(string name, ScadaModels.Alarm alarm) {
            return base.Channel.AddAlarm(name, alarm);
        }
        
        public System.Threading.Tasks.Task<bool> AddAlarmAsync(string name, ScadaModels.Alarm alarm) {
            return base.Channel.AddAlarmAsync(name, alarm);
        }
        
        public bool RemoveAlarm(string name, int id) {
            return base.Channel.RemoveAlarm(name, id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveAlarmAsync(string name, int id) {
            return base.Channel.RemoveAlarmAsync(name, id);
        }
        
        public ScadaModels.Alarm[] GetTagAlarms(string tagName) {
            return base.Channel.GetTagAlarms(tagName);
        }
        
        public System.Threading.Tasks.Task<ScadaModels.Alarm[]> GetTagAlarmsAsync(string tagName) {
            return base.Channel.GetTagAlarmsAsync(tagName);
        }
        
        public bool Registration(string username, string password) {
            return base.Channel.Registration(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrationAsync(string username, string password) {
            return base.Channel.RegistrationAsync(username, password);
        }
        
        public System.Tuple<bool, string> Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<bool, string>> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public bool Logout(string token) {
            return base.Channel.Logout(token);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string token) {
            return base.Channel.LogoutAsync(token);
        }
    }
}
