//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagValue", Namespace="http://schemas.datacontract.org/2004/07/ScadaSystem")]
    [System.SerializableAttribute()]
    public partial class TagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IReportManagerService")]
    public interface IReportManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsByDate", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsByDateResponse")]
        ScadaModels.AlarmValue[] GetAlarmsByDate(System.DateTime dateFrom, System.DateTime dateTo, string sortBy, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsByDate", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsByDateResponse")]
        System.Threading.Tasks.Task<ScadaModels.AlarmValue[]> GetAlarmsByDateAsync(System.DateTime dateFrom, System.DateTime dateTo, string sortBy, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsByPriority", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsByPriorityResponse")]
        ScadaModels.AlarmValue[] GetAlarmsByPriority(int priority, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsByPriority", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsByPriorityResponse")]
        System.Threading.Tasks.Task<ScadaModels.AlarmValue[]> GetAlarmsByPriorityAsync(int priority, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetTagValuesByDate", ReplyAction="http://tempuri.org/IReportManagerService/GetTagValuesByDateResponse")]
        ReportManager.ServiceReference.TagValue[] GetTagValuesByDate(System.DateTime dateFrom, System.DateTime dateTo, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetTagValuesByDate", ReplyAction="http://tempuri.org/IReportManagerService/GetTagValuesByDateResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetTagValuesByDateAsync(System.DateTime dateFrom, System.DateTime dateTo, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetMostRecentAIValues", ReplyAction="http://tempuri.org/IReportManagerService/GetMostRecentAIValuesResponse")]
        ReportManager.ServiceReference.TagValue[] GetMostRecentAIValues(bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetMostRecentAIValues", ReplyAction="http://tempuri.org/IReportManagerService/GetMostRecentAIValuesResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetMostRecentAIValuesAsync(bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetMostRecentDIValues", ReplyAction="http://tempuri.org/IReportManagerService/GetMostRecentDIValuesResponse")]
        ReportManager.ServiceReference.TagValue[] GetMostRecentDIValues(bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetMostRecentDIValues", ReplyAction="http://tempuri.org/IReportManagerService/GetMostRecentDIValuesResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetMostRecentDIValuesAsync(bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTagValuesByID", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTagValuesByIDResponse")]
        ReportManager.ServiceReference.TagValue[] GetAllTagValuesByID(string id, bool descending);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAllTagValuesByID", ReplyAction="http://tempuri.org/IReportManagerService/GetAllTagValuesByIDResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetAllTagValuesByIDAsync(string id, bool descending);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerServiceChannel : ReportManager.ServiceReference.IReportManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerServiceClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference.IReportManagerService>, ReportManager.ServiceReference.IReportManagerService {
        
        public ReportManagerServiceClient() {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ScadaModels.AlarmValue[] GetAlarmsByDate(System.DateTime dateFrom, System.DateTime dateTo, string sortBy, bool descending) {
            return base.Channel.GetAlarmsByDate(dateFrom, dateTo, sortBy, descending);
        }
        
        public System.Threading.Tasks.Task<ScadaModels.AlarmValue[]> GetAlarmsByDateAsync(System.DateTime dateFrom, System.DateTime dateTo, string sortBy, bool descending) {
            return base.Channel.GetAlarmsByDateAsync(dateFrom, dateTo, sortBy, descending);
        }
        
        public ScadaModels.AlarmValue[] GetAlarmsByPriority(int priority, bool descending) {
            return base.Channel.GetAlarmsByPriority(priority, descending);
        }
        
        public System.Threading.Tasks.Task<ScadaModels.AlarmValue[]> GetAlarmsByPriorityAsync(int priority, bool descending) {
            return base.Channel.GetAlarmsByPriorityAsync(priority, descending);
        }
        
        public ReportManager.ServiceReference.TagValue[] GetTagValuesByDate(System.DateTime dateFrom, System.DateTime dateTo, bool descending) {
            return base.Channel.GetTagValuesByDate(dateFrom, dateTo, descending);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetTagValuesByDateAsync(System.DateTime dateFrom, System.DateTime dateTo, bool descending) {
            return base.Channel.GetTagValuesByDateAsync(dateFrom, dateTo, descending);
        }
        
        public ReportManager.ServiceReference.TagValue[] GetMostRecentAIValues(bool descending) {
            return base.Channel.GetMostRecentAIValues(descending);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetMostRecentAIValuesAsync(bool descending) {
            return base.Channel.GetMostRecentAIValuesAsync(descending);
        }
        
        public ReportManager.ServiceReference.TagValue[] GetMostRecentDIValues(bool descending) {
            return base.Channel.GetMostRecentDIValues(descending);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetMostRecentDIValuesAsync(bool descending) {
            return base.Channel.GetMostRecentDIValuesAsync(descending);
        }
        
        public ReportManager.ServiceReference.TagValue[] GetAllTagValuesByID(string id, bool descending) {
            return base.Channel.GetAllTagValuesByID(id, descending);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference.TagValue[]> GetAllTagValuesByIDAsync(string id, bool descending) {
            return base.Channel.GetAllTagValuesByIDAsync(id, descending);
        }
    }
}
